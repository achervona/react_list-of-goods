{"version":3,"sources":["components/shapes/GoodShape.js","components/Good/Good.js","components/shapes/GoodsListShape.js","components/GoodsList/GoodsList.js","components/shapes/ListOptionsShape.js","components/ListOptions/ListOptions.js","components/shapes/ContentShape.js","components/Content/Content.js","App.js","index.js"],"names":["GoodShape","name","PropTypes","string","isRequired","Good","React","memo","good","className","propTypes","shape","GoodsListShape","goods","arrayOf","id","number","GoodsList","map","key","ListOptionsShape","reverseList","func","resetList","sortByAlphabet","sortByLength","minWordLength","selectLength","ListOptions","type","onClick","value","onChange","event","target","defaultProps","Content","state","props","setState","reverse","sort","prevGood","nextGood","localeCompare","length","filter","this","PureComponent","preparedGoods","App","isListVisible","showList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0d36304d.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport const GoodShape = {\n  name: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Good.scss';\n\nimport { GoodShape } from '../shapes/GoodShape';\n\nexport const Good = React.memo(({ good }) => (\n  <li className=\"good\">\n    {good.name}\n  </li>\n));\n\nGood.propTypes = PropTypes.shape(GoodShape).isRequired;\n","import PropTypes from 'prop-types';\nimport { GoodShape } from './GoodShape';\n\nexport const GoodsListShape = {\n  goods: PropTypes.arrayOf(\n    PropTypes.shape({\n      ...GoodShape,\n      id: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './GoodsList.scss';\n\nimport { Good } from '../Good';\nimport { GoodsListShape } from '../shapes/GoodsListShape';\n\nexport const GoodsList = React.memo(({ goods }) => (\n  <ul className=\"goods-list\">\n    {goods.map(good => (\n      <Good\n        good={good}\n        key={good.id}\n      />\n    ))}\n  </ul>\n));\n\nGoodsList.propTypes = PropTypes.shape(GoodsListShape).isRequired;\n","import PropTypes from 'prop-types';\n\nexport const ListOptionsShape = {\n  reverseList: PropTypes.func.isRequired,\n  resetList: PropTypes.func.isRequired,\n  sortByAlphabet: PropTypes.func.isRequired,\n  sortByLength: PropTypes.func.isRequired,\n  minWordLength: PropTypes.number,\n  selectLength: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './ListOptions.scss';\n\nimport { ListOptionsShape } from '../shapes/ListOptionsShape';\n\nexport const ListOptions = React.memo(({\n  reverseList,\n  resetList,\n  sortByAlphabet,\n  sortByLength,\n  minWordLength,\n  selectLength,\n}) => (\n  <div className=\"list-options\">\n    <div className=\"list-options__buttons\">\n      <button\n        type=\"button\"\n        className=\"list-options__button button\"\n        onClick={reverseList}\n      >\n        Reverse\n      </button>\n\n      <button\n        type=\"button\"\n        className=\"list-options__button button\"\n        onClick={sortByAlphabet}\n      >\n        Sort alphabetically\n      </button>\n\n      <button\n        type=\"button\"\n        className=\"list-options__button button\"\n        onClick={sortByLength}\n      >\n        Sort by length\n      </button>\n\n      <button\n        type=\"button\"\n        className=\"list-options__button button\"\n        onClick={resetList}\n      >\n        Reset\n      </button>\n    </div>\n\n    <p className=\"list-options__paragraph\">Minimal word length:</p>\n    <select\n      className=\"list-options__select\"\n      value={minWordLength}\n      onChange={\n        event => selectLength(event.target.value)\n      }\n    >\n      <option value={1}>1</option>\n      <option value={2}>2</option>\n      <option value={3}>3</option>\n      <option value={4}>4</option>\n      <option value={5}>5</option>\n      <option value={6}>6</option>\n      <option value={7}>7</option>\n      <option value={8}>8</option>\n      <option value={9}>9</option>\n      <option value={10}>10</option>\n    </select>\n  </div>\n));\n\nListOptions.propTypes = ListOptionsShape;\n\nListOptions.defaultProps = {\n  minWordLength: 1,\n};\n","import PropTypes from 'prop-types';\nimport { GoodShape } from './GoodShape';\n\nexport const ContentShape = {\n  goods: PropTypes.arrayOf(\n    PropTypes.shape({\n      ...GoodShape,\n      id: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport './Content.scss';\n\nimport { GoodsList } from '../GoodsList';\nimport { ListOptions } from '../ListOptions';\nimport { ContentShape } from '../shapes/ContentShape';\n\nexport class Content extends PureComponent {\n  state = {\n    minWordLength: 1,\n    goods: this.props.goods,\n  }\n\n  reverseList = () => {\n    this.setState(state => ({\n      goods: [...state.goods].reverse(),\n    }));\n  };\n\n  sortByAlphabet = () => {\n    this.setState(state => ({\n      goods: [...state.goods].sort((prevGood, nextGood) => (\n        prevGood.name.localeCompare(nextGood.name)\n      )),\n    }));\n  };\n\n  resetList = () => {\n    this.setState({\n      goods: this.props.goods,\n      minWordLength: 1,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState(state => ({\n      goods: [...state.goods].sort((prevGood, nextGood) => (\n        prevGood.name.length - nextGood.name.length\n      )),\n    }));\n  }\n\n  selectLength = (minWordLength) => {\n    this.setState({\n      goods: this.props.goods.filter(good => (\n        good.name.length >= minWordLength\n      )),\n      minWordLength: +minWordLength,\n    });\n  }\n\n  render() {\n    const { goods, minWordLength } = this.state;\n\n    return (\n      <div className=\"content\">\n        <GoodsList goods={goods} />\n\n        <ListOptions\n          reverseList={this.reverseList}\n          resetList={this.resetList}\n          sortByAlphabet={this.sortByAlphabet}\n          sortByLength={this.sortByLength}\n          minWordLength={minWordLength}\n          selectLength={this.selectLength}\n        />\n      </div>\n    );\n  }\n}\n\nContent.propTypes = PropTypes.shape(ContentShape).isRequired;\n","import React, { PureComponent } from 'react';\nimport './App.scss';\n\nimport { Content } from './components/Content';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst preparedGoods = goodsFromServer.map((good, id) => ({\n  name: good,\n  id,\n}));\n\nclass App extends PureComponent {\n  state = {\n    isListVisible: false,\n  }\n\n  showList = () => {\n    this.setState({\n      isListVisible: true,\n    });\n  };\n\n  render() {\n    const { isListVisible } = this.state;\n\n    return (\n      <div className=\"app\">\n        <h1 className=\"app__header\">Goods</h1>\n\n        {isListVisible\n          ? <Content goods={preparedGoods} />\n          : (\n            <button\n              type=\"button\"\n              className=\"app__button button\"\n              onClick={this.showList}\n            >\n              Start\n            </button>\n          )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}